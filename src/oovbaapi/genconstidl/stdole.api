<?xml version="1.0" encoding="utf-8"?>
<!-- =====================================================================

  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

  Copyright 2000, 2010 Oracle and/or its affiliates.

  OpenOffice.org - a multi-platform office productivity suite

  This file is part of OpenOffice.org.

  OpenOffice.org is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License version 3
  only, as published by the Free Software Foundation.

  OpenOffice.org is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License version 3 for more details
  (a copy is included in the LICENSE file that accompanied this code).

  You should have received a copy of the GNU Lesser General Public License
  version 3 along with OpenOffice.org.  If not, see
  <http://www.openoffice.org/license.html>
  for a copy of the LGPLv3 License.

====================================================================== -->

<!-- *** Do not edit, this file will be generated *** -->
<!DOCTYPE api SYSTEM "ApiSymbols.dtd">
<api library-identifier="OLE Automation" library-name="stdole" library-minorversion="0" library-majorversion="2" author="Sun Microsystems" date-created="20050331">
	<!--method::.LoadPicture-->
	<element type="method">
		<source id="stdole.LoadPicture">
			<name>LoadPicture</name>
			<type>HRESULT</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>filename</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>widthDesired</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>heightDesired</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>flags</name>
				</parameter>
				<parameter>
					<type>IPictureDisp</type>
					<name>retval</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--enum::LoadPictureConstants  {Enumeration}-->
	<element type="enumeration">
		<source id="stdole.LoadPictureConstants">
			<name>LoadPictureConstants</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::Color {Constant}-->
	<element type="constant">
		<source id="stdole.LoadPictureConstants.Color">
			<context kind="enumeration">LoadPictureConstants</context>
			<name>Color</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::Default {Constant}-->
	<element type="constant">
		<source id="stdole.LoadPictureConstants.Default">
			<context kind="enumeration">LoadPictureConstants</context>
			<name>Default</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::Monochrome {Constant}-->
	<element type="constant">
		<source id="stdole.LoadPictureConstants.Monochrome">
			<context kind="enumeration">LoadPictureConstants</context>
			<name>Monochrome</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::VgaColor {Constant}-->
	<element type="constant">
		<source id="stdole.LoadPictureConstants.VgaColor">
			<context kind="enumeration">LoadPictureConstants</context>
			<name>VgaColor</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::OLE_TRISTATE  {Enumeration}-->
	<element type="enumeration">
		<source id="stdole.OLE_TRISTATE">
			<name>OLE_TRISTATE</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::Checked {Constant}-->
	<element type="constant">
		<source id="stdole.OLE_TRISTATE.Checked">
			<context kind="enumeration">OLE_TRISTATE</context>
			<name>Checked</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::Gray {Constant}-->
	<element type="constant">
		<source id="stdole.OLE_TRISTATE.Gray">
			<context kind="enumeration">OLE_TRISTATE</context>
			<name>Gray</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::Unchecked {Constant}-->
	<element type="constant">
		<source id="stdole.OLE_TRISTATE.Unchecked">
			<context kind="enumeration">OLE_TRISTATE</context>
			<name>Unchecked</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::.SavePicture-->
	<element type="method">
		<source id="stdole.SavePicture">
			<name>SavePicture</name>
			<type>HRESULT</type>
			<parameter-list>
				<parameter>
					<type>IPictureDisp</type>
					<name>Picture</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::StdFont-->
	<element type="class">
		<source id="stdole.StdFont">
			<name>StdFont</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::StdFont.FontChanged-->
	<element type="method">
		<source id="stdole.StdFont.FontChanged">
			<context kind="class">StdFont</context>
			<name>FontChanged</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>PropertyName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::StdPicture-->
	<element type="class">
		<source id="stdole.StdPicture">
			<name>StdPicture</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::StdPicture.Render-->
	<element type="method">
		<source id="stdole.StdPicture.Render">
			<context kind="class">StdPicture</context>
			<name>Render</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>hdc</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>x</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>y</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>cx</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>cy</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>xSrc</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>ySrc</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>cxSrc</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>cySrc</name>
				</parameter>
				<parameter>
					<type>VT_PTR+VT_VOID</type>
					<name>prcWBounds</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
</api>
